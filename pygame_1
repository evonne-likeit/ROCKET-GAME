import pygame
import random

FPS = 60
WHITE = (245, 222, 179)
GREEN = (0, 255, 0)
ORANGE = (255,97,0)

WIDTH = 500
HEIGHT = 600

pygame.init()
screen = pygame.display.set_mode((WIDTH, HEIGHT))
pygame.display.set_caption("Evonne's world!")
clock = pygame.time.Clock()

class Player(pygame.sprite.Sprite):
    def __init__(self):
        pygame.sprite.Sprite.__init__(self)
        self.image = pygame.Surface((50, 40))
        self.image.fill(GREEN)
        self.rect = self.image.get_rect()
        self.rect.centerx = (WIDTH/2)
        self.rect.bottom = HEIGHT - 10
        # 也可 self.rect.y = 600 - 50
        
        self.speedx = 8

    def update(self):
        key_pressed = pygame.key.get_pressed() # return bool
        if key_pressed[pygame.K_RIGHT]:
            self.rect.x += self.speedx
        if key_pressed[pygame.K_LEFT]:
            self.rect.x -= self.speedx
        
        if self.rect.right > WIDTH:
            self.rect.right = WIDTH
        if self.rect.left < 0: 
            self.rect.left = 0
      
class Rock(pygame.sprite.Sprite):
    def __init__(self):
        pygame.sprite.Sprite.__init__(self)
        self.image = pygame.Surface((30, 40))
        self.image.fill(ORANGE)
        self.rect = self.image.get_rect() 
        self.rect.x = random.randrange(0,WIDTH - self.rect.width) 
        self.rect.y = random.randrange(-100,-40)
        # 也可 self.rect.y = 600 - 50
        self.speedy = random.randrange(2,8)
        self.speedx = random.randrange(-3,3)

    def update(self):
        self.rect.y += self.speedy
        self.rect.x += self.speedx
        if self.rect.top > HEIGHT or self.rect.right > WIDTH + 30 or self.rect.left < -30:
            # self.rect = self.image.get_rect() ?WHY NOT
            self.rect.x = random.randrange(0,WIDTH - self.rect.width) 
            self.rect.y = random.randrange(-100,-40)
            self.speedy = random.randrange(2,8)
            self.speedx = random.randrange(-3,3)

all_sprites = pygame.sprite.Group()
player = Player()
all_sprites.add(player)

for i in range(8):
    rock = Rock()
    all_sprites.add(rock)

running = True

while running:
    clock.tick(FPS)
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            running = False

    # 更新遊戲邏輯
    all_sprites.update()

    # 畫面更新
    screen.fill(WHITE)
    all_sprites.draw(screen)
    pygame.display.update()

pygame.quit()